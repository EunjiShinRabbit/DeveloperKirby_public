{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\SemiProject\\\\dk_admin_front\\\\src\\\\pages\\\\contentManagement\\\\WriteManagementDetail.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport api from \"../../api/api\";\nimport Loader from \"../../components/Loader\";\nimport { isLogin } from \"../../util/common\";\nimport TopBar from \"../../components/TopBar\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WriteManagementDetail = () => {\n  _s();\n  let {\n    writeId\n  } = useParams();\n  const [lists, setLists] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      window.localStorage.setItem(\"target\", writeId);\n      try {\n        const response = await api.writeInfoDetail();\n        setLists(response.data);\n      } catch (e) {\n        console.log(e);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  if (!isLogin) {\n    window.location.replace(\"/\");\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  if (isLogin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        name: \"\\uAC8C\\uC2DC\\uAE00 \\uC0C1\\uC138\",\n        high1: \"\\uAC8C\\uC2DC\\uAE00 \\uAD00\\uB9AC\",\n        high2: \"\\uCF58\\uD150\\uCE20 \\uAD00\\uB9AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: lists && lists.map(_ref => {\n          let {\n            boardName,\n            writeNum,\n            writeName,\n            writeDate,\n            nickname,\n            countGood,\n            countComment,\n            writeContents,\n            comments\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: boardName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: writeNum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: writeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: writeDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uB313\\uAE00\\uC218 \", countComment]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uC88B\\uC544\\uC694\\uC218\", countGood]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: writeContents\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), comments && comments.map(_ref2 => {\n              let {\n                nickname,\n                writeDate,\n                commentContent\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [nickname, writeDate, commentContent]\n              }, void 0, true);\n            })]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(WriteManagementDetail, \"OI4B7YCcBRS3CinKq/8nnPEbtX8=\", false, function () {\n  return [useParams];\n});\n_c = WriteManagementDetail;\nexport default WriteManagementDetail;\nvar _c;\n$RefreshReg$(_c, \"WriteManagementDetail\");","map":{"version":3,"names":["useState","useEffect","api","Loader","isLogin","TopBar","useParams","WriteManagementDetail","writeId","lists","setLists","loading","setLoading","fetchData","window","localStorage","setItem","response","writeInfoDetail","data","e","console","log","location","replace","map","boardName","writeNum","writeName","writeDate","nickname","countGood","countComment","writeContents","comments","commentContent"],"sources":["C:/Users/User/SemiProject/dk_admin_front/src/pages/contentManagement/WriteManagementDetail.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport api from \"../../api/api\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { isLogin } from \"../../util/common\";\r\nimport TopBar from \"../../components/TopBar\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst WriteManagementDetail = () =>{\r\n\r\n  let { writeId } = useParams();\r\n\r\n  const [lists, setLists] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n     setLoading(true);\r\n     window.localStorage.setItem(\"target\", writeId);\r\n      try {\r\n        const response = await api.writeInfoDetail();\r\n        setLists(response.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if(!isLogin){\r\n    window.location.replace(\"/\");\r\n  }\r\n  \r\n  if(loading) {\r\n    return <div className=\"center\"><Loader/></div>\r\n  }\r\n\r\n  if(isLogin){\r\n    return(\r\n      <div className=\"center\">\r\n        <TopBar name=\"게시글 상세\" high1=\"게시글 관리\" high2=\"콘텐츠 관리\"/>\r\n        <div>\r\n          {lists &&\r\n            lists\r\n            .map(({ boardName, writeNum, writeName, writeDate, nickname, countGood, countComment, writeContents, comments}) => (\r\n              <>\r\n              <span>{boardName}</span>\r\n              <span>{writeNum}</span>\r\n              <span>{writeName}</span>\r\n              <span>{nickname}</span>\r\n              <span>{writeDate}</span>\r\n              <span>댓글수 {countComment}</span>\r\n              <span>좋아요수{countGood}</span>\r\n              <p>{writeContents}</p>\r\n              <hr/>\r\n              {comments && comments\r\n              .map(({nickname, writeDate, commentContent})=>(\r\n                <>\r\n                {nickname}\r\n                {writeDate}\r\n                {commentContent}\r\n                </>\r\n              ))}\r\n              </>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default WriteManagementDetail;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,eAAe;AAC/B,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAAA;AAE7C,MAAMC,qBAAqB,GAAG,MAAK;EAAA;EAEjC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,SAAS,EAAE;EAE7B,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,YAAY;MAC7BD,UAAU,CAAC,IAAI,CAAC;MAChBE,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAER,OAAO,CAAC;MAC7C,IAAI;QACF,MAAMS,QAAQ,GAAG,MAAMf,GAAG,CAACgB,eAAe,EAAE;QAC5CR,QAAQ,CAACO,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAChB;MACAR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IACDC,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAG,CAACT,OAAO,EAAC;IACVU,MAAM,CAACS,QAAQ,CAACC,OAAO,CAAC,GAAG,CAAC;EAC9B;EAEA,IAAGb,OAAO,EAAE;IACV,oBAAO;MAAK,SAAS,EAAC,QAAQ;MAAA,uBAAC,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAAM;EAChD;EAEA,IAAGP,OAAO,EAAC;IACT,oBACE;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACrB,QAAC,MAAM;QAAC,IAAI,EAAC,iCAAQ;QAAC,KAAK,EAAC,iCAAQ;QAAC,KAAK,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAE,eACrD;QAAA,UACGK,KAAK,IACJA,KAAK,CACJgB,GAAG,CAAC;UAAA,IAAC;YAAEC,SAAS;YAAEC,QAAQ;YAAEC,SAAS;YAAEC,SAAS;YAAEC,QAAQ;YAAEC,SAAS;YAAEC,YAAY;YAAEC,aAAa;YAAEC;UAAQ,CAAC;UAAA,oBAC5G;YAAA,wBACA;cAAA,UAAOR;YAAS;cAAA;cAAA;cAAA;YAAA,QAAQ,eACxB;cAAA,UAAOC;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAQ,eACvB;cAAA,UAAOC;YAAS;cAAA;cAAA;cAAA;YAAA,QAAQ,eACxB;cAAA,UAAOE;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAQ,eACvB;cAAA,UAAOD;YAAS;cAAA;cAAA;cAAA;YAAA,QAAQ,eACxB;cAAA,kCAAWG,YAAY;YAAA;cAAA;cAAA;cAAA;YAAA,QAAQ,eAC/B;cAAA,uCAAWD,SAAS;YAAA;cAAA;cAAA;cAAA;YAAA,QAAQ,eAC5B;cAAA,UAAIE;YAAa;cAAA;cAAA;cAAA;YAAA,QAAK,eACtB;cAAA;cAAA;cAAA;YAAA,QAAK,EACJC,QAAQ,IAAIA,QAAQ,CACpBT,GAAG,CAAC;cAAA,IAAC;gBAACK,QAAQ;gBAAED,SAAS;gBAAEM;cAAc,CAAC;cAAA,oBACzC;gBAAA,WACCL,QAAQ,EACRD,SAAS,EACTM,cAAc;cAAA,gBACZ;YAAA,CACJ,CAAC;UAAA,gBACC;QAAA,CACJ;MAAC;QAAA;QAAA;QAAA;MAAA,QAEA;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEV;AACF,CAAC;AAAC,GA/DI5B,qBAAqB;EAAA,QAEPD,SAAS;AAAA;AAAA,KAFvBC,qBAAqB;AAgE3B,eAAeA,qBAAqB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}