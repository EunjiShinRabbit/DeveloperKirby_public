{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\SemiProject\\\\dk_admin_front\\\\src\\\\pages\\\\contentManagement\\\\BoardManagementDetail.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport api from \"../../api/api\";\nimport Loader from \"../../components/Loader\";\nimport { isLogin } from \"../../util/common\";\nimport TopBar from \"../../components/TopBar\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BoardManagementDetail = () => {\n  _s();\n  let {\n    board\n  } = useParams();\n  const [lists, setLists] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [newBoardName, setNewBoardName] = useState(board);\n  const [errMsg, setErrMsg] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      window.localStorage.setItem(\"target\", board);\n      try {\n        const response = await api.boardInfoDetail();\n        setLists(response.data);\n      } catch (e) {\n        console.log(e);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  if (!isLogin) {\n    window.location.replace(\"/\");\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  const onChangeBoard = e => {\n    const tmpName = e.target.value;\n    setNewBoardName(tmpName);\n    if (tmpName === \"관리자\") setErrMsg(\"게시판 이름으로 '관리자'는 사용 불가능합니다\");\n  };\n  const boardNameDup = () => {\n    const fetchSearchData = async () => {\n      setLoading(true);\n      try {\n        console.log(newBoardName);\n        const response = await api.boardNameDup(newBoardName);\n        console.log(response.data.result);\n        if (response.data.result === \"OK\") {\n          setErrMsg(\"사용 가능한 게시판 이름입니다\");\n          const fetchUpdateData = async () => {\n            try {\n              const response = await api.boardUpdate(board, newBoardName);\n              if (response.data.result === \"OK\") {\n                // console.log(\"게시판 이름 수정 완료\")\n                // 나중에 수정 완료 모달 띄우던가,,\n                window.location.replace(\"/content/boardManagement\");\n              }\n            } catch (e) {\n              console.log(e);\n            }\n          };\n          fetchUpdateData();\n        } else setErrMsg(\"이미 존재하는 게시판 이름입니다\");\n      } catch (e) {\n        console.log(e);\n      }\n      setLoading(false);\n    };\n    fetchSearchData();\n  };\n  if (isLogin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        name: \"\\uAC8C\\uC2DC\\uD310 \\uC0C1\\uC138\",\n        high1: \"\\uAC8C\\uC2DC\\uD310 \\uAD00\\uB9AC\",\n        high2: \"\\uCF58\\uD150\\uCE20 \\uAD00\\uB9AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: lists && lists.map(_ref => {\n          let {\n            countWrite,\n            writes\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newBoardName,\n              onChange: onChangeBoard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: boardNameDup,\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uAC8C\\uC2DC\\uAE00 \\uC218 \\uCD1D\", countWrite, \"\\uAC1C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uCD5C\\uADFC \\uAC8C\\uC2DC\\uD310\\uC5D0 \\uC791\\uC131\\uB41C \\uAE00 \", writes.length, \"\\uAC1C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), writes && writes.map(_ref2 => {\n              let {\n                writeName,\n                writeDate,\n                nickname\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"\\uAE00\\uC81C\\uBAA9\", writeName, \"\\uC791\\uC131\\uC790\", nickname, \"\\uC791\\uC131\\uC2DC\\uAC04\", writeDate]\n              }, void 0, true);\n            }), !writes && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD574\\uB2F9 \\uAC8C\\uC2DC\\uD310\\uC5D0 \\uAC8C\\uC2DC\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(BoardManagementDetail, \"iCt4nsMKF58lKlQbJsfAG/4VLFQ=\", false, function () {\n  return [useParams];\n});\n_c = BoardManagementDetail;\nexport default BoardManagementDetail;\nvar _c;\n$RefreshReg$(_c, \"BoardManagementDetail\");","map":{"version":3,"names":["useState","useEffect","api","Loader","isLogin","TopBar","useParams","BoardManagementDetail","board","lists","setLists","loading","setLoading","newBoardName","setNewBoardName","errMsg","setErrMsg","fetchData","window","localStorage","setItem","response","boardInfoDetail","data","e","console","log","location","replace","onChangeBoard","tmpName","target","value","boardNameDup","fetchSearchData","result","fetchUpdateData","boardUpdate","map","countWrite","writes","length","writeName","writeDate","nickname"],"sources":["C:/Users/User/SemiProject/dk_admin_front/src/pages/contentManagement/BoardManagementDetail.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport api from \"../../api/api\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { isLogin } from \"../../util/common\";\r\nimport TopBar from \"../../components/TopBar\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst BoardManagementDetail = () =>{\r\n\r\n  let { board } = useParams();\r\n\r\n  const [lists, setLists] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [newBoardName, setNewBoardName] = useState(board);\r\n  const [errMsg, setErrMsg] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n     setLoading(true);\r\n     window.localStorage.setItem(\"target\", board);\r\n      try {\r\n        const response = await api.boardInfoDetail();\r\n        setLists(response.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if(!isLogin){\r\n    window.location.replace(\"/\");\r\n  }\r\n  \r\n  if(loading) {\r\n    return <div className=\"center\"><Loader/></div>\r\n  }\r\n  \r\n  const onChangeBoard = (e) =>{\r\n    const tmpName = e.target.value;\r\n    setNewBoardName(tmpName);\r\n    if(tmpName === \"관리자\") setErrMsg(\"게시판 이름으로 '관리자'는 사용 불가능합니다\");\r\n  }\r\n\r\n  const boardNameDup = () =>{\r\n    const fetchSearchData = async () => {\r\n      setLoading(true);\r\n       try {\r\n        console.log(newBoardName);\r\n        const response = await api.boardNameDup(newBoardName);\r\n        console.log(response.data.result);\r\n        if(response.data.result === \"OK\") {\r\n          setErrMsg(\"사용 가능한 게시판 이름입니다\");\r\n          const fetchUpdateData = async () => {\r\n            try {\r\n              const response = await api.boardUpdate(board, newBoardName);\r\n              if(response.data.result === \"OK\") {\r\n                // console.log(\"게시판 이름 수정 완료\")\r\n                // 나중에 수정 완료 모달 띄우던가,,\r\n                window.location.replace(\"/content/boardManagement\");}\r\n            } catch (e) {\r\n              console.log(e);\r\n            }\r\n          };\r\n          fetchUpdateData();\r\n        } else setErrMsg(\"이미 존재하는 게시판 이름입니다\");\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchSearchData();\r\n  }\r\n\r\n  if(isLogin){\r\n    return(\r\n      <div className=\"center\">\r\n        <TopBar name=\"게시판 상세\" high1=\"게시판 관리\" high2=\"콘텐츠 관리\"/>\r\n        <div>\r\n          {lists &&\r\n            lists\r\n            .map(({ countWrite, writes}) => (\r\n              <>\r\n              <input type=\"text\" value={newBoardName} onChange={onChangeBoard}/>\r\n              <button onClick={boardNameDup}>수정</button>\r\n              <p>{errMsg}</p>\r\n              <span>게시글 수 총{countWrite}개</span>\r\n              <p>최근 게시판에 작성된 글 {writes.length}개</p>\r\n              <hr/>\r\n              {writes && writes\r\n              .map(({writeName, writeDate, nickname})=>(\r\n                <>\r\n                글제목{writeName}\r\n                작성자{nickname}\r\n                작성시간{writeDate}\r\n                </>\r\n              ))}\r\n              {!writes && <p>해당 게시판에 게시글이 없습니다!</p>}\r\n              </>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default BoardManagementDetail;"],"mappings":"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"},"metadata":{},"sourceType":"module"}