[{"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\index.js":"1","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\App.js":"2","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\util\\common.js":"3","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\components\\SideBar.js":"4","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\components\\Header.js":"5","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\components\\Loader.js":"6","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\memberManagement\\MemberManagement.js":"7","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\login\\LoginPage.js":"8","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\components\\Pagination.js":"9","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\components\\TopBar.js":"10","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\components\\SearchBar.js":"11","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\api\\api.js":"12","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\contentManagement\\BoardManagement.js":"13","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\contentManagement\\WriteManagement.js":"14","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\contentManagement\\CommentManagement.js":"15","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\adManagement\\AdManagement.js":"16","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\notiManagement\\NotiSend.js":"17","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\contentManagement\\BoardManagementDetail.js":"18","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\contentManagement\\WriteManagementDetail.js":"19","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\contentManagement\\BoardManagementAdd.js":"20","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\contentManagement\\WriteManagementSearch.js":"21","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\components\\Modal.js":"22","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\adManagement\\AdManagementAdd.js":"23","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\adManagement\\AdManagementDetail.js":"24","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\api\\firebase.js":"25"},{"size":225,"mtime":1667622395039,"results":"26","hashOfConfig":"27"},{"size":2670,"mtime":1667914500621,"results":"28","hashOfConfig":"27"},{"size":214,"mtime":1667622395071,"results":"29","hashOfConfig":"27"},{"size":1487,"mtime":1667069044496,"results":"30","hashOfConfig":"27"},{"size":580,"mtime":1667922655069,"results":"31","hashOfConfig":"27"},{"size":372,"mtime":1666972477264,"results":"32","hashOfConfig":"27"},{"size":5070,"mtime":1667922574437,"results":"33","hashOfConfig":"27"},{"size":1540,"mtime":1667917307281,"results":"34","hashOfConfig":"27"},{"size":1408,"mtime":1667921297321,"results":"35","hashOfConfig":"27"},{"size":431,"mtime":1667918707128,"results":"36","hashOfConfig":"27"},{"size":183,"mtime":1666972477265,"results":"37","hashOfConfig":"27"},{"size":5160,"mtime":1667914500625,"results":"38","hashOfConfig":"27"},{"size":5636,"mtime":1667923671224,"results":"39","hashOfConfig":"27"},{"size":6100,"mtime":1667923705049,"results":"40","hashOfConfig":"27"},{"size":6999,"mtime":1667923587558,"results":"41","hashOfConfig":"27"},{"size":5456,"mtime":1667923828936,"results":"42","hashOfConfig":"27"},{"size":3100,"mtime":1667914500639,"results":"43","hashOfConfig":"27"},{"size":3404,"mtime":1667918852811,"results":"44","hashOfConfig":"27"},{"size":2037,"mtime":1667622395057,"results":"45","hashOfConfig":"27"},{"size":2741,"mtime":1667622395050,"results":"46","hashOfConfig":"27"},{"size":6402,"mtime":1667923724133,"results":"47","hashOfConfig":"27"},{"size":432,"mtime":1667622395035,"results":"48","hashOfConfig":"27"},{"size":4503,"mtime":1667914500632,"results":"49","hashOfConfig":"27"},{"size":5313,"mtime":1667914500635,"results":"50","hashOfConfig":"27"},{"size":1126,"mtime":1667914500627,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1rklf5r",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"55"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"55"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"55"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"55"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"55"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"55"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\index.js",[],[],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\App.js",["136","137"],[],"import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport { isLogin } from \"./util/common\";\r\n\r\nimport \"./style/reset.scss\";\r\nimport \"./style/main.scss\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport LoginPage from \"./pages/login/LoginPage\";\r\nimport Sidebar from \"./components/SideBar\";\r\nimport MemberManagement from \"./pages/memberManagement/MemberManagement\";\r\nimport Loader from \"./components/Loader\";\r\nimport BoardManagement from \"./pages/contentManagement/BoardManagement\";\r\nimport WriteManagement from \"./pages/contentManagement/WriteManagement\";\r\nimport WriteManagementSearch from \"./pages/contentManagement/WriteManagementSearch\"\r\nimport CommentManagement from \"./pages/contentManagement/CommentManagement\";\r\nimport AdManagement from \"./pages/adManagement/AdManagement\";\r\nimport NotiSend from \"./pages/notiManagement/NotiSend\";\r\nimport WriteManagementDetail from \"./pages/contentManagement/WriteManagementDetail\";\r\nimport BoardManagementDetail from \"./pages/contentManagement/BoardManagementDetail\";\r\nimport BoardManagementAdd from \"./pages/contentManagement/BoardManagementAdd\";\r\nimport AdManagementDetail from \"./pages/adManagement/AdManagementDetail\"\r\nimport AdManagementAdd from \"./pages/adManagement/AdManagementAdd\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Header/>\r\n        {isLogin && <Sidebar/>}\r\n        <Routes>\r\n          <Route path='/' element={<LoginPage/>}/>\r\n          <Route path='/login' element={<LoginPage/>}/>\r\n          {/* {!isLogin && <Navigate to=\"/login\" />} */}\r\n          <Route path=\"/member\" element={<MemberManagement/>}/>\r\n          <Route path=\"/content/boardManagement\" element={<BoardManagement/>}/>\r\n          <Route path=\"/content/boardManagement/add\" element={<BoardManagementAdd/>}/>\r\n          <Route path=\"/content/boardManagement/detail/:board\" element={<BoardManagementDetail/>}/>\r\n          <Route path=\"/content/writeManagement\" element={<WriteManagement/>}/>\r\n          <Route path=\"/content/writeManagement/search/:query\" element={<WriteManagementSearch/>}/>\r\n          <Route path=\"/content/writeManagement/detail/:writeId\" element={<WriteManagementDetail/>}/>\r\n          <Route path=\"/content/commentManagement\" element={<CommentManagement/>}/>\r\n          <Route path=\"/adManagement\" element={<AdManagement/>}/>\r\n          <Route path=\"/adManagement/AdManagementDetail/:ad_num\" element = {<AdManagementDetail/>}/>\r\n          <Route path=\"/adManagement/AdManagementAdd\" element = {<AdManagementAdd/>}/>\r\n          <Route path=\"/noti/send\" element={<NotiSend/>}/>\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\util\\common.js",[],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\components\\SideBar.js",[],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\components\\Header.js",[],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\components\\Loader.js",[],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\memberManagement\\MemberManagement.js",["138"],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\login\\LoginPage.js",["139"],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\components\\Pagination.js",["140","141"],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\components\\TopBar.js",[],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\components\\SearchBar.js",[],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\api\\api.js",[],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\contentManagement\\BoardManagement.js",["142","143","144"],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\contentManagement\\WriteManagement.js",["145"],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\contentManagement\\CommentManagement.js",["146","147"],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\adManagement\\AdManagement.js",["148","149","150"],[],"import { useState, useEffect } from \"react\";\r\nimport api from \"../../api/api\";\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport TopBar from \"../../components/TopBar\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { isLogin } from \"../../util/common\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst AdManagement = () =>{\r\n\r\n  let { ad_num } = useParams();\r\n\r\n  const [lists, setLists] = useState('');\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const offset = (page - 1) * limit;\r\n  const [pageStart, setPageStart] = useState(0);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [prepared, setPrepared] = useState(false);\r\n\r\n  // 체크된 아이템을 담을 배열\r\n  const [checkItems, setCheckItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n     setLoading(true);\r\n      try {\r\n        const response = await api.adInfo();\r\n        setLists(response.data);\r\n        setPrepared(true);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if(!isLogin){\r\n    window.location.replace(\"/\");\r\n  }\r\n  \r\n  if(loading) {\r\n    return <div className=\"center\"><Loader/></div>\r\n  }\r\n\r\n  const adminAdDelete = () =>{\r\n    window.localStorage.setItem(\"target\", checkItems);\r\n    setPrepared(false);\r\n    const fetchDeleteData = async () => {\r\n      setLoading(true);\r\n       try {\r\n         const response = await api.adminAdDelete();\r\n         setLists(response.data);\r\n         setPrepared(true);\r\n       } catch (e) {\r\n         console.log(e);\r\n       }\r\n       setLoading(false);\r\n     };\r\n    fetchDeleteData();\r\n    setCheckItems([]);\r\n  }\r\n\r\n  const adminAdUpdate = () =>{\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n       try {\r\n         const response = await api.adminAdUpdateInfo();\r\n         setLists(response.data);\r\n         setPrepared(true);\r\n       } catch (e) {\r\n         console.log(e);\r\n       }\r\n       setLoading(false);\r\n     };\r\n     fetchData();\r\n      };\r\n \r\n  \r\n  \r\n  // 체크박스 단일 선택\r\n  const handleSingleCheck = (checked, id) => {\r\n    if (checked) {\r\n      // 단일 선택 시 체크된 아이템을 배열에 추가\r\n      setCheckItems(prev => [...prev, id]);\r\n    } else {\r\n      // 단일 선택 해제 시 체크된 아이템을 제외한 배열 (필터)\r\n      setCheckItems(checkItems.filter((el) => el !== id));\r\n    }\r\n  };\r\n\r\n  // 체크박스 전체 선택\r\n  const handleAllCheck = (checked) => {\r\n    if(checked) {\r\n      // 전체 선택 클릭 시 데이터의 모든 아이템(id)를 담은 배열로 checkItems 상태 업데이트\r\n      const idArray = [];\r\n      lists.forEach((el) => idArray.push(el.ad_num));\r\n      setCheckItems(idArray);\r\n    }\r\n    else {\r\n      // 전체 선택 해제 시 checkItems 를 빈 배열로 상태 업데이트\r\n      setCheckItems([]);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className=\"center\">\r\n      <TopBar name=\"광고 관리\" high1=\"배너 관리\"/>\r\n      {/* <SearchBar/> */}\r\n      <div>\r\n        <div className=\"tableWrapper\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <input type='checkbox' name='select-all'\r\n                  onChange={(e) => handleAllCheck(e.target.checked)}\r\n                  // 데이터 개수와 체크된 아이템의 개수가 다를 경우 선택 해제 (하나라도 해제 시 선택 해제)\r\n                  checked={checkItems.length === (lists.length % 10) ? true : false} \r\n                />\r\n                <th></th>\r\n                <th>광고 번호</th>\r\n                <th>광고 이름</th>\r\n                <th>이동 URL</th>\r\n                <th>광고 이미지</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { prepared &&\r\n                lists.slice(offset, offset + limit)\r\n                .map(({ ad_num, ad_name, ad_url, ad_img }) => (\r\n                  <tr>\r\n                    <td>\r\n                    <input type='checkbox' \r\n                      name={`select-${ad_num}`}\r\n                      onChange={(e) => handleSingleCheck(e.target.checked, ad_num)}\r\n                      // 체크된 아이템 배열에 해당 아이템이 있을 경우 선택 활성화, 아닐 시 해제\r\n                      checked={checkItems.includes(ad_num) ? true : false} \r\n                      />\r\n                    </td>\r\n                    <td>{ad_num}</td>\r\n                    <td>{ad_name}</td>\r\n                    <td><button onClick={adminAdUpdate}><Link to={`/adManagement/AdManagementDetail/${ad_num}`}>수정</Link></button></td>\r\n                    <td>{ad_url}</td>\r\n                    <td>{ad_img}</td>\r\n                  </tr>\r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n          <div className=\"btnlst\">\r\n          <button onClick={adminAdDelete}>삭제</button>\r\n          <button><Link to={\"/adManagement/AdManagementAdd\"}>추가</Link></button>\r\n          </div>\r\n        </div>\r\n        <Pagination\r\n          total={lists.length}\r\n          limit={limit}\r\n          page={page}\r\n          setPage={setPage}\r\n          pageStart={pageStart}\r\n          setPageStart={setPageStart}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n          \r\n  );\r\n};\r\nexport default AdManagement;","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\notiManagement\\NotiSend.js",["151","152","153","154"],[],"import React, { useState, useEffect } from \"react\";\r\nimport api from \"../../api/api\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { isLogin } from \"../../util/common\";\r\nimport TopBar from \"../../components/TopBar\";\r\n\r\nconst NotiSend = () =>{\r\n  const [lists, setLists] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [prepared, setPrepared] = useState(false);\r\n\r\n  const [mail,setMail] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [disabled, setDisabled] = useState(true);\r\n  \r\n\r\n  const onChangeTitle = (e) =>{\r\n    setTitle(e.target.value);\r\n  } \r\n  const onChangeContent = (e) => {\r\n    setContent(e.target.value);\r\n  } \r\n\r\n  // 체크된 아이템을 담을 배열\r\n  const [checkItems, setCheckItems] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //    setLoading(true);\r\n  //     try {\r\n  //       const response = await api.memberInfo();\r\n  //       setLists(response.data);\r\n  //       setPrepared(true);\r\n  //     } catch (e) {\r\n  //       console.log(e);\r\n  //     }\r\n  //     setLoading(false);\r\n  //   };\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  // if(!isLogin){\r\n  //   alert(\"잘못된 접근입니다!\");\r\n  //   window.location.replace(\"/\");\r\n  // }\r\n  \r\n  // if(loading) {\r\n  //   return <div className=\"center\"><Loader/></div>\r\n  // }\r\n\r\n\r\n  const adminNotiSend = () => {\r\n    setPrepared(false);\r\n    const fetchDeleteData = async () => {\r\n      setLoading(true);\r\n       try {\r\n         const response = await api.adminNotiSend(mail, title, content);\r\n         setLists(response.data);\r\n         console.log(response.data);\r\n         setPrepared(true);\r\n       } catch (e) {\r\n         console.log(e);\r\n       }\r\n       setLoading(false);\r\n       alert(\"발송이 완료되었습니다!!!!!!!\");\r\n       window.location.replace(\"/\");\r\n     };\r\n    fetchDeleteData();\r\n    setCheckItems([]);\r\n    }\r\n  \r\n\r\n  if(!isLogin){\r\n    window.location.replace(\"/\");\r\n  }\r\n  \r\n  if(loading) {\r\n    return <div className=\"center\"><Loader/></div>\r\n  }\r\n\r\n  const handleClickRadioButton = (e) => {\r\n    console.log(\"선택한 값 : \" + e.target.value);\r\n    setMail(e.target.value);\r\n    setDisabled(false);\r\n  }\r\n  \r\n\r\nreturn(\r\n  <div className=\"center\">\r\n    <TopBar name=\"알림 발송\" high1=\"알림 관리\"/>\r\n    <label>\r\n      <span>알림 분류</span>\r\n      <div>\r\n      <label><input type=\"radio\" name=\"notisend\" onChange={handleClickRadioButton} value=\"notice\" />공지사항</label>\r\n      <label><input type=\"radio\" name=\"notisend\" onChange={handleClickRadioButton} value=\"ad\"/>광고</label>\r\n      </div>\r\n    </label>\r\n    <br/>\r\n      <label>\r\n        <span>제목</span>\r\n        <input type=\"text\" value={title} onChange={onChangeTitle}/>\r\n      </label>\r\n      <br/>\r\n      <label>\r\n        <span>내용</span>\r\n        <textarea value={content} onChange={onChangeContent}/>\r\n      </label>\r\n      <br/>\r\n      <button onClick={adminNotiSend} disabled ={disabled} >발송</button>\r\n    </div>\r\n  );\r\n};\r\nexport default NotiSend;","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\contentManagement\\BoardManagementDetail.js",["155"],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\contentManagement\\WriteManagementDetail.js",["156"],[],"import { useState, useEffect } from \"react\";\r\nimport api from \"../../api/api\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { isLogin } from \"../../util/common\";\r\nimport TopBar from \"../../components/TopBar\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst WriteManagementDetail = () =>{\r\n\r\n  let { writeId } = useParams();\r\n\r\n  const [lists, setLists] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n     setLoading(true);\r\n     window.localStorage.setItem(\"target\", writeId);\r\n      try {\r\n        const response = await api.writeInfoDetail();\r\n        setLists(response.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if(!isLogin){\r\n    window.location.replace(\"/\");\r\n  }\r\n  \r\n  if(loading) {\r\n    return <div className=\"center\"><Loader/></div>\r\n  }\r\n\r\n  if(isLogin){\r\n    return(\r\n      <div className=\"center\">\r\n        <TopBar name=\"게시글 상세\" high1=\"게시글 관리\" high2=\"콘텐츠 관리\"/>\r\n        <div>\r\n          {lists &&\r\n            lists\r\n            .map(({ boardName, writeNum, writeName, writeDate, nickname, countGood, countComment, writeContents, comments}) => (\r\n              <>\r\n              <span>{boardName}</span>\r\n              <span>{writeNum}</span>\r\n              <span>{writeName}</span>\r\n              <span>{nickname}</span>\r\n              <span>{writeDate}</span>\r\n              <span>댓글수 {countComment}</span>\r\n              <span>좋아요수{countGood}</span>\r\n              <p>{writeContents}</p>\r\n              <hr/>\r\n              {comments && comments\r\n              .map(({nickname, writeDate, commentContent})=>(\r\n                <>\r\n                {nickname}\r\n                {writeDate}\r\n                {commentContent}\r\n                </>\r\n              ))}\r\n              </>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default WriteManagementDetail;","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\contentManagement\\BoardManagementAdd.js",["157","158"],[],"import { useState, useEffect } from \"react\";\r\nimport api from \"../../api/api\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { isLogin } from \"../../util/common\";\r\nimport TopBar from \"../../components/TopBar\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst BoardManagementAdd = () =>{\r\n\r\n  let { board } = useParams();\r\n\r\n  const [lists, setLists] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [newBoardName, setNewBoardName] = useState(board);\r\n  const [errMsg, setErrMsg] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n     setLoading(true);\r\n     window.localStorage.setItem(\"target\", board);\r\n      try {\r\n        const response = await api.boardInfoDetail();\r\n        setLists(response.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if(!isLogin){\r\n    window.location.replace(\"/\");\r\n  }\r\n  \r\n  if(loading) {\r\n    return <div className=\"center\"><Loader/></div>\r\n  }\r\n  \r\n  const onChangeBoard = (e) =>{\r\n    const tmpName = e.target.value;\r\n    setNewBoardName(tmpName);\r\n    if(tmpName === \"관리자\") setErrMsg(\"게시판 이름으로 '관리자'는 사용 불가능합니다\");\r\n  }\r\n\r\n  const boardNameDup = () =>{\r\n    const fetchSearchData = async () => {\r\n      setLoading(true);\r\n       try {\r\n        console.log(newBoardName);\r\n        const response = await api.boardNameDup(newBoardName);\r\n        console.log(response.data.result);\r\n        if(response.data.result === \"OK\") {\r\n          setErrMsg(\"사용 가능한 게시판 이름입니다\");\r\n          const fetchUpdateData = async () => {\r\n            try {\r\n              const response = await api.boardInsert(newBoardName);\r\n              if(response.data.result === \"OK\") {\r\n                // console.log(\"게시판 이름 수정 완료\")\r\n                // 나중에 수정 완료 모달 띄우던가,,\r\n                window.location.replace(\"/content/boardManagement\");}\r\n            } catch (e) {\r\n              console.log(e);\r\n            }\r\n          };\r\n          fetchUpdateData();\r\n        } else setErrMsg(\"이미 존재하는 게시판 이름입니다\");\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchSearchData();\r\n  }\r\n\r\n  if(isLogin){\r\n    return(\r\n      <div className=\"center\">\r\n        <TopBar name=\"게시판 추가\" high1=\"게시판 관리\" high2=\"콘텐츠 관리\"/>\r\n        <div>\r\n          <input type=\"text\" value={newBoardName} onChange={onChangeBoard}/>\r\n          <p>{errMsg}</p>\r\n          <button onClick={boardNameDup}>추가</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default BoardManagementAdd;","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\contentManagement\\WriteManagementSearch.js",[],[],"C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\components\\Modal.js",["159"],[],"\r\nconst Modal = ({ setModalOpen, imgUrl}) => {\r\n  // 모달 끄기 \r\n  const closeModal = () => {\r\n      setModalOpen(false);\r\n  };\r\n\r\n  if(imgUrl){\r\n    return (\r\n      <div className=\"modalcontainer\">\r\n        <button className=\"modalclose\" onClick={closeModal}>\r\n          X\r\n        </button>\r\n        <p>\r\n          <img className=\"modalimg\" src={imgUrl}/>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\nexport default Modal;","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\adManagement\\AdManagementAdd.js",["160","161","162","163"],[],"import { useState, useEffect } from \"react\";\r\nimport api from \"../../api/api\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { isLogin } from \"../../util/common\";\r\nimport TopBar from \"../../components/TopBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { storage } from \"../../api/firebase\"\r\n\r\nconst AdManagementAdd = () =>{\r\n  const [lists, setLists] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [prepared, setPrepared] = useState(false);\r\n\r\n  const [ad_name, setad_name] = useState('');\r\n  const [ad_url, setad_url] = useState('');\r\n  const [ad_img, setad_img] = useState('');\r\n\r\n  const [image, setImage] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n\r\n  const onChangeAd_name = (e) => setad_name(e.target.value);\r\n  const onChangeAd_url = (e) => setad_url(e.target.value);\r\n\r\n  // 체크된 아이템을 담을 배열\r\n  const [checkItems, setCheckItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n     setLoading(true);\r\n      try {\r\n        const response = await api.adInfo();\r\n        setLists(response.data);\r\n        setPrepared(true);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if(!isLogin){\r\n    window.location.replace(\"/\");\r\n  }\r\n  \r\n  if(loading) {\r\n    return <div className=\"center\"><Loader/></div>\r\n  }\r\n\r\n  const adminAdAdd = async () =>{\r\n\r\n    const fetchAdUpdateData = async () => {\r\n      setLoading(true);\r\n       try {\r\n         const response = await api.adminAdAdd(ad_name, ad_url, ad_img);\r\n         setLists(response.data);\r\n         setPrepared(true);\r\n       } catch (e) {\r\n         console.log(e);\r\n       }\r\n       setLoading(false);\r\n     };\r\n     fetchAdUpdateData();\r\n     window.location.reload();\r\n  }\r\n  \r\n\r\n  const handleImage = (event) => {\r\n    const image = event.target.files[0];\r\n    setImage(image);\r\n    console.log(image);\r\n    setError(\"\");\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setError(\"\");\r\n    if (image === \"\") {\r\n      console.log(\"파일이 선택되지 않았습니다\");\r\n      setError(\"파일이 선택되지 않았습니다\");\r\n      return;\r\n    }\r\n    // 업로드 처리\r\n    console.log(\"업로드 처리\");\r\n    const storageRef = storage.ref(\"images/advertisement/\"); //어떤 폴더 아래에 넣을지 설정\r\n    const imgName = (ad_name + \"Img\");\r\n    const imagesRef = storageRef.child(imgName);\r\n    // const imagesRef = storageRef.child(image.name); //파일명\r\n\r\n    console.log(\"파일을 업로드하는 행위\");\r\n    const upLoadTask = imagesRef.put(image);\r\n    console.log(\"태스크 실행 전\");\r\n\r\n    upLoadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        console.log(\"snapshot\", snapshot);\r\n        const percent = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log(percent + \"% done\");\r\n      },\r\n      (error) => {\r\n        console.log(\"err\", error);\r\n        setError(\"파일 업로드에 실패했습니다.\" + error);\r\n      },\r\n      () => {\r\n        upLoadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n          console.log(\"File available at\", downloadURL);\r\n          setImageUrl(downloadURL);\r\n          setad_img(downloadURL)\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  return(\r\n    <div className=\"center\">\r\n      <TopBar name=\"배너 추가\" high1=\"배너 관리\" high2=\"광고 관리\"/>\r\n      <div>\r\n      <label>\r\n          <span>광고 이름</span>\r\n          <input type=\"text\" value={ad_name} onChange={onChangeAd_name}/>\r\n        </label>\r\n        <label>\r\n          <span>광고 이동 URL</span>\r\n          <input type=\"text\" value={ad_url} onChange={onChangeAd_url}/>\r\n        </label>\r\n        <label>\r\n          <span>광고 이미지</span>\r\n          {error && {error}}\r\n          <form className=\"adImgForm\" onSubmit={onSubmit}>\r\n            <input type=\"file\" onChange={handleImage} />\r\n            <button onClick={onSubmit}>업로드</button>\r\n          </form>\r\n          {imageUrl && (\r\n            <div>\r\n              <p> 이미지 미리보기</p>\r\n              <img className=\"adImgPreview\" src={imageUrl} alt=\"uploaded\"/>\r\n            </div>\r\n          )}\r\n        </label>\r\n        <br/>\r\n        <button onClick={adminAdAdd}><Link to={\"/adManagement\"}>등록하기</Link></button>\r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n};\r\nexport default AdManagementAdd;\r\n","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\pages\\adManagement\\AdManagementDetail.js",["164","165","166","167","168","169","170","171","172","173"],[],"import { useState, useEffect, useRef} from \"react\";\r\nimport api from \"../../api/api\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { isLogin } from \"../../util/common\";\r\nimport TopBar from \"../../components/TopBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport {Fragment,Button} from \"react\";\r\nimport axios from \"axios\";\r\nimport { storage } from \"../../api/firebase\"\r\n\r\nconst AdManagementDetail = () =>{\r\n  \r\n  const [image, setImage] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const{ ad_num } = useParams();\r\n  console.log('ad_num :', ad_num)\r\n\r\n  const [adminAdUpdateInfo, setAdminAdUpdateInfo] = useState([{\r\n    ad_name : '',\r\n    ad_url : '',\r\n    ad_img : ''\r\n  }]);\r\n  const [lists, setLists] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [prepared, setPrepared] = useState(false);\r\n  // const [newAd_name, setNewAd_name] = useState('ad_name');\r\n  // const [newAd_url, setNewAd_name] = useState('ad_url');\r\n\r\n  const [ad_name, setad_name] = useState('');\r\n  const [ad_url, setad_url] = useState('');\r\n  const [ad_img, setad_img] = useState('');\r\n\r\n  const onChangeAd_name = (e) => setad_name(e.target.value);\r\n  const onChangeAd_url = (e) => setad_url(e.target.value);\r\n \r\n  // 체크된 아이템을 담을 배열\r\n  const [checkItems, setCheckItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n     setLoading(true);\r\n      try {\r\n        const response = await api.adminAdUpdateInfo(ad_num);\r\n        setAdminAdUpdateInfo(response.data);\r\n        console.log(\"응답\"+response.data.ad_name);\r\n        setad_name(response.data.ad_name);\r\n        setad_url(response.data.ad_url);\r\n        setad_img(response.data.ad_img);\r\n        setImageUrl(response.data.ad_img);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  \r\n  console.log('app :: adminAdUpdateInfo:: ', adminAdUpdateInfo);\r\n\r\n  if(!isLogin){\r\n    window.location.replace(\"/\");\r\n  }\r\n  \r\n  if(loading) {\r\n    return <div className=\"center\"><Loader/></div>\r\n  }\r\n  \r\n  const handleImage = (event) => {\r\n    const image = event.target.files[0];\r\n    setImage(image);\r\n    console.log(image);\r\n    setError(\"\");\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setError(\"\");\r\n    if (image === \"\") {\r\n      console.log(\"파일이 선택되지 않았습니다\");\r\n      setError(\"파일이 선택되지 않았습니다\");\r\n      return;\r\n    }\r\n    // 업로드 처리\r\n    console.log(\"업로드 처리\");\r\n    const storageRef = storage.ref(\"images/advertisement/\"); //어떤 폴더 아래에 넣을지 설정\r\n    const imgName = (ad_name + \"Img\");\r\n    const imagesRef = storageRef.child(imgName);\r\n    // const imagesRef = storageRef.child(image.name); //파일명\r\n\r\n    console.log(\"파일을 업로드하는 행위\");\r\n    const upLoadTask = imagesRef.put(image);\r\n    console.log(\"태스크 실행 전\");\r\n\r\n    upLoadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        console.log(\"snapshot\", snapshot);\r\n        const percent = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log(percent + \"% done\");\r\n      },\r\n      (error) => {\r\n        console.log(\"err\", error);\r\n        setError(\"파일 업로드에 실패했습니다.\" + error);\r\n      },\r\n      () => {\r\n        upLoadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n          console.log(\"File available at\", downloadURL);\r\n          setImageUrl(downloadURL);\r\n          setad_img(downloadURL);\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const adminAdUpdate = async () =>{\r\n    const fetchAdUpdateData = async () => {\r\n      setLoading(true);\r\n       try {\r\n         const response = await api.adminAdUpdate(ad_num, ad_name, ad_url, ad_img);\r\n         setLists(response.data);\r\n         setPrepared(true);\r\n       } catch (e) {\r\n         console.log(e);\r\n       }\r\n       setLoading(false);\r\n     };\r\n     fetchAdUpdateData();\r\n  }\r\n\r\n  return(\r\n    <div className=\"center\">\r\n      <TopBar name=\"배너 상세\" high1=\"배너 관리\" high2=\"광고 관리\"/>\r\n        \r\n            <label>\r\n            <span>광고 이름</span>\r\n            <input type=\"text\" value={ad_name} onChange={onChangeAd_name} />\r\n          </label>\r\n          <label>\r\n            <span>광고 이동 URL</span>\r\n            <input type=\"text\" value={ad_url}  onChange={onChangeAd_url} />\r\n          </label>\r\n       \r\n        {/* 이미지 아직 미구현  */}\r\n      \r\n        <label>\r\n          <span>광고 이미지</span>\r\n          {error && {error}}\r\n          <form className=\"adImgForm\" onSubmit={onSubmit}>\r\n            <input type=\"file\" onChange={handleImage} />\r\n            <button onClick={onSubmit}>업로드</button>\r\n          </form>\r\n          {imageUrl && (\r\n            <div>\r\n              <p> 이미지 미리보기</p>\r\n              <img className=\"adImgPreview\" src={imageUrl} alt=\"uploaded\"/>\r\n            </div>\r\n          )}\r\n        </label>\r\n        \r\n        <button onClick={adminAdUpdate}><Link to={\"/adManagement\"}>수정하기</Link></button>\r\n      </div>\r\n     \r\n  );\r\n};\r\nexport default AdManagementDetail;\r\n","C:\\Users\\User\\SemiProject\\dk_admin_front\\src\\api\\firebase.js",[],[],{"ruleId":"174","severity":1,"message":"175","line":1,"column":50,"nodeType":"176","messageId":"177","endLine":1,"endColumn":58},{"ruleId":"174","severity":1,"message":"178","line":11,"column":8,"nodeType":"176","messageId":"177","endLine":11,"endColumn":14},{"ruleId":"174","severity":1,"message":"179","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":17},{"ruleId":"174","severity":1,"message":"180","line":11,"column":10,"nodeType":"176","messageId":"177","endLine":11,"endColumn":16},{"ruleId":"174","severity":1,"message":"181","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":18,"column":21,"nodeType":"184","messageId":"185","endLine":18,"endColumn":23},{"ruleId":"174","severity":1,"message":"179","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":17},{"ruleId":"174","severity":1,"message":"186","line":12,"column":17,"nodeType":"176","messageId":"177","endLine":12,"endColumn":25},{"ruleId":"174","severity":1,"message":"187","line":18,"column":10,"nodeType":"176","messageId":"177","endLine":18,"endColumn":18},{"ruleId":"174","severity":1,"message":"179","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":17},{"ruleId":"174","severity":1,"message":"179","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":17},{"ruleId":"174","severity":1,"message":"188","line":8,"column":10,"nodeType":"176","messageId":"177","endLine":8,"endColumn":14},{"ruleId":"174","severity":1,"message":"179","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":17},{"ruleId":"174","severity":1,"message":"189","line":13,"column":9,"nodeType":"176","messageId":"177","endLine":13,"endColumn":15},{"ruleId":"174","severity":1,"message":"186","line":16,"column":17,"nodeType":"176","messageId":"177","endLine":16,"endColumn":25},{"ruleId":"174","severity":1,"message":"190","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"191","line":8,"column":10,"nodeType":"176","messageId":"177","endLine":8,"endColumn":15},{"ruleId":"174","severity":1,"message":"187","line":10,"column":10,"nodeType":"176","messageId":"177","endLine":10,"endColumn":18},{"ruleId":"174","severity":1,"message":"192","line":26,"column":10,"nodeType":"176","messageId":"177","endLine":26,"endColumn":20},{"ruleId":"193","severity":1,"message":"194","line":30,"column":6,"nodeType":"195","endLine":30,"endColumn":8,"suggestions":"196"},{"ruleId":"193","severity":1,"message":"197","line":28,"column":6,"nodeType":"195","endLine":28,"endColumn":8,"suggestions":"198"},{"ruleId":"174","severity":1,"message":"191","line":12,"column":10,"nodeType":"176","messageId":"177","endLine":12,"endColumn":15},{"ruleId":"193","severity":1,"message":"194","line":30,"column":6,"nodeType":"195","endLine":30,"endColumn":8,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":15,"column":11,"nodeType":"202","endLine":15,"endColumn":51},{"ruleId":"174","severity":1,"message":"191","line":10,"column":10,"nodeType":"176","messageId":"177","endLine":10,"endColumn":15},{"ruleId":"174","severity":1,"message":"187","line":12,"column":10,"nodeType":"176","messageId":"177","endLine":12,"endColumn":18},{"ruleId":"174","severity":1,"message":"192","line":27,"column":10,"nodeType":"176","messageId":"177","endLine":27,"endColumn":20},{"ruleId":"174","severity":1,"message":"203","line":27,"column":22,"nodeType":"176","messageId":"177","endLine":27,"endColumn":35},{"ruleId":"174","severity":1,"message":"204","line":1,"column":31,"nodeType":"176","messageId":"177","endLine":1,"endColumn":37},{"ruleId":"174","severity":1,"message":"205","line":7,"column":21,"nodeType":"176","messageId":"177","endLine":7,"endColumn":32},{"ruleId":"174","severity":1,"message":"206","line":8,"column":9,"nodeType":"176","messageId":"177","endLine":8,"endColumn":17},{"ruleId":"174","severity":1,"message":"207","line":8,"column":18,"nodeType":"176","messageId":"177","endLine":8,"endColumn":24},{"ruleId":"174","severity":1,"message":"208","line":9,"column":8,"nodeType":"176","messageId":"177","endLine":9,"endColumn":13},{"ruleId":"174","severity":1,"message":"191","line":26,"column":10,"nodeType":"176","messageId":"177","endLine":26,"endColumn":15},{"ruleId":"174","severity":1,"message":"187","line":28,"column":10,"nodeType":"176","messageId":"177","endLine":28,"endColumn":18},{"ruleId":"174","severity":1,"message":"192","line":40,"column":10,"nodeType":"176","messageId":"177","endLine":40,"endColumn":20},{"ruleId":"174","severity":1,"message":"203","line":40,"column":22,"nodeType":"176","messageId":"177","endLine":40,"endColumn":35},{"ruleId":"193","severity":1,"message":"209","line":59,"column":6,"nodeType":"195","endLine":59,"endColumn":8,"suggestions":"210"},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'Loader' is defined but never used.","'SearchBar' is defined but never used.","'errMsg' is assigned a value but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setLimit' is assigned a value but never used.","'prepared' is assigned a value but never used.","'Link' is defined but never used.","'ad_num' is assigned a value but never used.","'useEffect' is defined but never used.","'lists' is assigned a value but never used.","'checkItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'board'. Either include it or remove the dependency array.","ArrayExpression",["211"],"React Hook useEffect has a missing dependency: 'writeId'. Either include it or remove the dependency array.",["212"],["213"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setCheckItems' is assigned a value but never used.","'useRef' is defined but never used.","'useNavigate' is defined but never used.","'Fragment' is defined but never used.","'Button' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'ad_num'. Either include it or remove the dependency array.",["214"],{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"215","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [board]",{"range":"222","text":"223"},"Update the dependencies array to be: [writeId]",{"range":"224","text":"225"},{"range":"226","text":"223"},"Update the dependencies array to be: [ad_num]",{"range":"227","text":"228"},[891,893],"[board]",[790,792],"[writeId]",[888,890],[1968,1970],"[ad_num]"]