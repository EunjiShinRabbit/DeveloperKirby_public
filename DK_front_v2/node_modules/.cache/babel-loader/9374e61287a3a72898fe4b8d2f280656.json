{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\SemiProject\\\\DK_front_v2\\\\src\\\\components\\\\MyCommentWrite.js\",\n  _s = $RefreshSig$();\nimport goodIcon from \"../resource/kirby_icon6.png\";\nimport commentIcon from \"../resource/kirby_icon7.png\";\nimport { useState, useEffect } from \"react\";\nimport api from \"../api/api\";\nimport useInfiniteScroll from \"./hooks/useInfiniteScroll\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyCommentWrite = () => {\n  _s();\n  const getNickname = window.localStorage.getItem(\"userNickname\");\n  const memberNum = window.localStorage.getItem(\"memberNum\");\n  console.log(\"로컬스토리지 값 \" + memberNum);\n  const [writes, setWrties] = useState('');\n  const [offset, setOffset] = useState(0);\n  const [isMax, setIsMax] = useState(false);\n  const onClickWrite = val => {\n    console.log(\"상세 게시글로 이동 : \" + val);\n    window.localStorage.setItem(\"Detail\", val);\n  };\n  const writeItems = async () => {\n    try {\n      if (isMax) {\n        setIsFetching(false);\n        console.log('//max Data');\n        return;\n      }\n      console.log('//new Data Fetcing');\n      const fetchData = async () => {\n        // 검색결과 글 불러오는 api 호출\n        console.log(\"검색결과 불러오는중\");\n        const response = await api.mycommentWriteList(String(memberNum), String(offset), String(offset + 10));\n        setWrties(old => [...old, ...response.data]);\n        console.log('//new Data :', response.data);\n        setOffset(old => old + 10); // offset을 계속 10씩 늘려주면 된다\n        setIsFetching(false); // fetching이 false가 되어야 한번만 데이터를 불러줌 패칭 스테이트는 선언한 훅에서 나옴\n        if (response.data.length < 10) setIsMax(true);\n      };\n      fetchData();\n    } catch (e) {\n      console.log(e);\n    }\n    ;\n  };\n  // hook 선언 (인자값에는 데이터를 불러오는 함수 입력(writeItems))\n  const [isFetching, setIsFetching] = useInfiniteScroll(writeItems);\n  useEffect(() => {\n    // setLoading(true)\n    writeItems();\n    // setLoading(false)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [writes && writes.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/write\",\n        onClick: () => onClickWrite(item.writeNum),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"wname\",\n          children: item.writeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"wcontent\",\n          children: item.writeContents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n          children: item.writeDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"nickname\",\n          children: item.nickName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"status\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"good\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: goodIcon,\n              alt: \"\\uC88B\\uC544\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.countGood\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: commentIcon,\n              alt: \"\\uB313\\uAE00\\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.countComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)), isFetching && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New Data Fetcing .......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 22\n    }, this), !isFetching && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB354\\uC774\\uC0C1 \\uC870\\uD68C\\uD560 \\uAC8C\\uC2DC\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n_s(MyCommentWrite, \"SoNPUqkZbSeEvxXGQK6FNFPrP/k=\", false, function () {\n  return [useInfiniteScroll];\n});\n_c = MyCommentWrite;\nexport default MyCommentWrite;\nvar _c;\n$RefreshReg$(_c, \"MyCommentWrite\");","map":{"version":3,"names":["goodIcon","commentIcon","useState","useEffect","api","useInfiniteScroll","Link","MyCommentWrite","getNickname","window","localStorage","getItem","memberNum","console","log","writes","setWrties","offset","setOffset","isMax","setIsMax","onClickWrite","val","setItem","writeItems","setIsFetching","fetchData","response","mycommentWriteList","String","old","data","length","e","isFetching","map","item","index","writeNum","writeName","writeContents","writeDate","nickName","countGood","countComment"],"sources":["C:/Users/User/SemiProject/DK_front_v2/src/components/MyCommentWrite.js"],"sourcesContent":["import goodIcon from \"../resource/kirby_icon6.png\";\r\nimport commentIcon from \"../resource/kirby_icon7.png\";\r\nimport { useState, useEffect } from \"react\";\r\nimport api from \"../api/api\";\r\nimport useInfiniteScroll from \"./hooks/useInfiniteScroll\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MyCommentWrite = () =>{\r\n\r\n  const getNickname = window.localStorage.getItem(\"userNickname\");\r\n  const memberNum = window.localStorage.getItem(\"memberNum\");\r\n  console.log(\"로컬스토리지 값 \" + memberNum)\r\n  const [writes, setWrties] = useState('');\r\n  const [offset, setOffset] = useState(0);\r\n  const [isMax, setIsMax] = useState(false);\r\n\r\n  const onClickWrite = (val) => {\r\n    console.log(\"상세 게시글로 이동 : \" + val)\r\n    window.localStorage.setItem(\"Detail\", val);\r\n  }\r\n\r\n  const writeItems = async () => {\r\n    try {\r\n      if(isMax){\r\n        setIsFetching(false);\r\n        console.log('//max Data');\r\n        return;\r\n      }\r\n      console.log('//new Data Fetcing');\r\n      const fetchData = async () => {\r\n        // 검색결과 글 불러오는 api 호출\r\n        console.log(\"검색결과 불러오는중\");\r\n        const response = await api.mycommentWriteList(String(memberNum),String(offset),String(offset + 10));\r\n        setWrties(old => ([...old, ...response.data]));\r\n        console.log('//new Data :',response.data);\r\n        setOffset(old => old + 10) // offset을 계속 10씩 늘려주면 된다\r\n        setIsFetching(false); // fetching이 false가 되어야 한번만 데이터를 불러줌 패칭 스테이트는 선언한 훅에서 나옴\r\n        if(response.data.length < 10) setIsMax(true);\r\n      }\r\n      fetchData();\r\n    } catch(e) {\r\n      console.log(e);\r\n    };\r\n  }\r\n  // hook 선언 (인자값에는 데이터를 불러오는 함수 입력(writeItems))\r\n  const [isFetching,setIsFetching] = useInfiniteScroll(writeItems)\r\n\r\n\r\n  useEffect(() => {\r\n    // setLoading(true)\r\n    writeItems();\r\n    // setLoading(false)\r\n  }, []);\r\n\r\n\r\n  return(\r\n      <>\r\n      {writes && writes.map((item,index) => (\r\n      <div className=\"write\">\r\n      <Link key={index} to=\"/write\" onClick={()=>onClickWrite(item.writeNum)}>\r\n        <h2 className=\"wname\">{item.writeName}</h2>\r\n        <p className=\"wcontent\">\r\n        {item.writeContents}</p>\r\n        <time>{item.writeDate}</time>\r\n        <h3 className=\"nickname\">{item.nickName}</h3>\r\n        <ul className=\"status\">\r\n          <li className=\"good\">\r\n            <img src={goodIcon} alt=\"좋아요\"/>\r\n            <span>{item.countGood}</span>\r\n          </li>\r\n          <li className=\"comment\">\r\n            <img src={commentIcon} alt=\"댓글수\"/>\r\n            <span>{item.countComment}</span>\r\n          </li>\r\n        </ul>\r\n      </Link>\r\n      </div>\r\n      ))}\r\n      {isFetching && <h1>New Data Fetcing .......</h1>}\r\n      {!isFetching && <h1>더이상 조회할 게시글이 없습니다</h1>}\r\n      </>\r\n  );\r\n};\r\nexport default MyCommentWrite;"],"mappings":"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"},"metadata":{},"sourceType":"module"}