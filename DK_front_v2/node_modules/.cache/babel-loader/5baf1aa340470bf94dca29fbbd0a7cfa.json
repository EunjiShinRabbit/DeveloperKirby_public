{"ast":null,"code":"import axios from \"axios\";\nconst HEADER = 'application/json';\n// const HEADER = {\"Content-type\" : \"application/json; charset-UTF-8\"};\nconst BASE_URL = \"http://localhost:8090/developerKirby/\";\nconst api = {\n  userLogin: async function (nickname, pwd) {\n    const loginObj = {\n      nickname: nickname,\n      pwd: pwd\n    };\n    return await axios.post(BASE_URL + \"LoginServlet\", loginObj, HEADER);\n  },\n  profileSelect: async function () {\n    const regCmd = {\n      target: localStorage.getItem(\"memberNum\") //조회할 대상의 회원번호 날려줌\n    };\n\n    return await axios.post(BASE_URL + \"ProfileSelectServlet\", regCmd, HEADER);\n  },\n  //회원정보 조회\n\n  //회원탈퇴\n  memberDelete: async function () {\n    const regCheck = {\n      target: localStorage.getItem(\"memberNum\")\n    };\n    return await axios.post(BASE_URL + \"MemberDeleteServlet\", regCheck, HEADER);\n  },\n  //회원정보수정\n  memberUpdate: async function (value, type, nickname) {\n    const updateObj = {\n      value: value,\n      type: type,\n      nickname: nickname\n    };\n    return await axios.post(BASE_URL + \"MemberUpdateServlet\", updateObj, HEADER);\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","HEADER","BASE_URL","api","userLogin","nickname","pwd","loginObj","post","profileSelect","regCmd","target","localStorage","getItem","memberDelete","regCheck","memberUpdate","value","type","updateObj"],"sources":["C:/Users/User/SemiProject/DK_front_v2/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\r\nconst HEADER = 'application/json';\r\n// const HEADER = {\"Content-type\" : \"application/json; charset-UTF-8\"};\r\nconst BASE_URL = \"http://localhost:8090/developerKirby/\";\r\n\r\nconst api = {\r\n  userLogin: async function(nickname, pwd) {\r\n    const loginObj = {\r\n      nickname: nickname,\r\n      pwd: pwd\r\n    }\r\n    return await axios.post(BASE_URL+ \"LoginServlet\", loginObj, HEADER);\r\n  },\r\n  profileSelect: async function() {\r\n    const regCmd = {\r\n      target : localStorage.getItem(\"memberNum\") //조회할 대상의 회원번호 날려줌\r\n    }\r\n    return await axios.post(BASE_URL + \"ProfileSelectServlet\", regCmd, HEADER);\r\n  },\r\n  //회원정보 조회\r\n\r\n  //회원탈퇴\r\n  memberDelete: async function() {\r\n    const regCheck = {\r\n      target : localStorage.getItem(\"memberNum\")\r\n    }\r\n    return await axios.post(BASE_URL + \"MemberDeleteServlet\", regCheck, HEADER);\r\n  },\r\n\r\n  //회원정보수정\r\n  memberUpdate: async function(value, type, nickname) {\r\n    const updateObj = {\r\n      value : value,\r\n      type : type, \r\n      nickname : nickname\r\n    }\r\n    return await axios.post(BASE_URL + \"MemberUpdateServlet\", updateObj, HEADER);\r\n  },\r\n  \r\n};\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,MAAM,GAAG,kBAAkB;AACjC;AACA,MAAMC,QAAQ,GAAG,uCAAuC;AAExD,MAAMC,GAAG,GAAG;EACVC,SAAS,EAAE,gBAAeC,QAAQ,EAAEC,GAAG,EAAE;IACvC,MAAMC,QAAQ,GAAG;MACfF,QAAQ,EAAEA,QAAQ;MAClBC,GAAG,EAAEA;IACP,CAAC;IACD,OAAO,MAAMN,KAAK,CAACQ,IAAI,CAACN,QAAQ,GAAE,cAAc,EAAEK,QAAQ,EAAEN,MAAM,CAAC;EACrE,CAAC;EACDQ,aAAa,EAAE,kBAAiB;IAC9B,MAAMC,MAAM,GAAG;MACbC,MAAM,EAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;;IACD,OAAO,MAAMb,KAAK,CAACQ,IAAI,CAACN,QAAQ,GAAG,sBAAsB,EAAEQ,MAAM,EAAET,MAAM,CAAC;EAC5E,CAAC;EACD;;EAEA;EACAa,YAAY,EAAE,kBAAiB;IAC7B,MAAMC,QAAQ,GAAG;MACfJ,MAAM,EAAGC,YAAY,CAACC,OAAO,CAAC,WAAW;IAC3C,CAAC;IACD,OAAO,MAAMb,KAAK,CAACQ,IAAI,CAACN,QAAQ,GAAG,qBAAqB,EAAEa,QAAQ,EAAEd,MAAM,CAAC;EAC7E,CAAC;EAED;EACAe,YAAY,EAAE,gBAAeC,KAAK,EAAEC,IAAI,EAAEb,QAAQ,EAAE;IAClD,MAAMc,SAAS,GAAG;MAChBF,KAAK,EAAGA,KAAK;MACbC,IAAI,EAAGA,IAAI;MACXb,QAAQ,EAAGA;IACb,CAAC;IACD,OAAO,MAAML,KAAK,CAACQ,IAAI,CAACN,QAAQ,GAAG,qBAAqB,EAAEiB,SAAS,EAAElB,MAAM,CAAC;EAC9E;AAEF,CAAC;AACD,eAAeE,GAAG"},"metadata":{},"sourceType":"module"}